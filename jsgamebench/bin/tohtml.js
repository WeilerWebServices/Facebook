#! /usr/bin/env node

// Copyright 2004-present Facebook. All Rights Reserved.

// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License. You may obtain
// a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.

fs = require('fs');
http = require('http');
path = require('path');
url = require('url');
child = require('child_process');

Comm = require('../lib/comm');
Jobs = require('../lib/jobs');

function getFileNames(txt,table) {
  var ret = txt.match(/["']([^"']*)["']/g);
  for(var j in ret) {
    var fname = ret[j].slice(1,ret[j].length-1);
    if (fname[0] == '/') {
      fname = fname.slice(1);
    }
    try {
      table[fname] = table[fname] || fs.readFileSync(fname, 'binary');
    } catch (e) {
    }
  }
}

function writeFile(name,data,cb)
{
  var dir = name.slice(0,name.lastIndexOf('/'));
  child.exec('mkdir -p '+dir, function(err,stdout,stderr) {
    fs.writeFileSync(name, data, 'binary');
    return cb && cb();
  });
}

var fnames = {};
var fb_app_info={id:0,secret:0};
if (process.argv.length < 3) {
  console.log('Usage: tohtml <project>');
} else {

  var project = process.argv[2];
  var req = {headers: {} };
  //req.headers['user-agent'] = user_agent;
  var options = {echo_only: true, fb_app_info: fb_app_info};
  var dirs = [];
  
	child.exec('find . -name "*.shtml" -print', function(err, stdout, stderr) {
	  if (!err && stdout) {
	    var list = stdout.split('\n');
	    for(var i in list) {
	      var shtml = list[i];
	      if (shtml.length && shtml.indexOf(project) >= 0) {
          var html = shtml.substr(0,shtml.lastIndexOf('.')) + '.html';
          var file = fs.readFileSync(shtml, 'binary');
          var txt = Comm.expandSHTML(req, file, shtml, options);
          txt = '<!--- this file was autogenerated from a .shtml file ---->\n' + txt;
          var dir = list[i].substr(0,list[i].lastIndexOf('/'));
	        var readme = dir + '/README';
          getFileNames(txt + "\n'"+readme+"'",fnames);
          fnames[html] = txt;
          console.log('convert ' + list[i] + ' to ' + html);
          dirs.push(dir);
        }
      }
      var queue = [];
      for(var i in fnames) {
        Jobs.add(queue,writeFile,'test/' + i,fnames[i]);
      }
      for(var i in dirs) {
        Jobs.add(queue,function (dir) {
          child.exec('cp -r '+dir+'/images test/'+dir+'/images', function(err) {});
        },dirs[i]);
      }
      Jobs.run(queue);
    }
  });
}

