/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/ 

#ifndef UPDATESCOMPARATOR_H
#define UPDATESCOMPARATOR_H

#include <deque>

#include "../../data/ChangesTypes.h"
#include "../../data/ServiceData.h"

namespace facebook {

/**
 *
 * class UpdatesComparator
 *
 * This class is responsible for  
 * analyzing of difference between
 * current instance of a ServiceData and
 * new instance 
 * 
 * The result of such analysis - is the set 
 * updates. This set of updates is used by 
 * other classes to update UI
 *
 * @see ServiceData
 */
class UpdatesComparator{
   // methods
public:

 /**
  * Analize changes and prepare data for toolbar UI update
  * Recognize the following change types:
  * - pokes updated
  * - message count updated
  * - friend requests updated
  * - event invitation count updated
  * - group invitation count updated
  *
  * @param new data to analyse (by ref)
  * @param current data to compare with (by ref)
  *
  * @return list of notifications about changes
  */
  ChangeEventsQueue getToolbarDataChanges(const ServiceData& newData,
         const ServiceData& currentData);

 /**
  * Analize user data changes and prepare data for notifications
  *
  * @param new data to analyse (by ref)
  * @param current data to compare with (by ref)
  *
  * @return list of notifications about changes
  */
  ChangeEventsQueue getSelfChanges(const ServiceData& newData,
         const ServiceData& currentData);

 /**
  * Analize user friend list changes and prepare data for notifications
  *
  * @param new data to analyse (by ref)
  * @param current data to compare with (by ref)
  *
  * @return list of notifications about changes
  */
  FriendsChangeEventsQueue getFriendsChanges(const ServiceData& newData,
         const ServiceData& currentData);

 /**
  * Analize albums changes and prepare data for notifications
  *
  * @param new data to analyse (by ref)
  * @param current data to compare with (by ref)
  *
  * @return list of notifications about changes
  */
  EventsToAlbumsIDsQueue getAlbumsChanges(const ServiceData& newData,
         const ServiceData& currentData);


 /**
  * Analize friend list changes
  *
  * @param new data to analyse (by ref)
  * @param current data to compare with (by ref)
  *
  * @return list of new friends
  */
  FriendsIDs getNewFriends(const ServiceData& newData,
      const ServiceData& currentData);

};


} // !namespace facebook


#endif