/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/ 

#ifndef XMLREQUEST_H
#define XMLREQUEST_H


#include <map>

#include "../../common/DatachangeEvents.h"
#include "../../util/StringUtils.h"

namespace facebook{

/**
 *
 * class XMLRequest
 *
 * This class is encapsulates 
 * request and responce used for communication with 
 * Facebook service
 * new instance 
 *
 */
class XMLRequest{

   // types/typedefs
public:
   typedef std::map<String, String> RequestParams;

   enum RequestType{
      GET,
      POST
   };

   enum RequestKind{
      CREATE_TOKEN,
      CREATE_SESSION,
      GET_FRIENDS,
      GET_NOTIFICATIONS,
      SET_STATUS,
      HAS_PERMISSION,
      GET_ALBUMS,
      USERS_GETINFO,
   };

   // construction
public:
  /**
   *  @param facebookApi - the name of facebook API. e.g. facebook.status.set
   *  
   *  @apiParams - the part of parameters, without api_key,  
   *  call_id, sig, v, session_key. For instatnce if you create
   *  XMLRequest for facebook.status.set API you you specify only 
   *  status string. Everything else is a headacke of communication
   *  layer
   * 
   *  @requestType - type of request (GET/POST)
   */
   XMLRequest(const String& facebookApi, 
      const RequestParams& apiParams, 
      const RequestType requestType,
      const RequestKind requestKind);

   // methods
public:
   
   /**
    * return the name of facebook API
    */
   String getApiName() const;


  /**
   * return request params
   */
   RequestParams getRequestParams() const;
   
   /**
    * return request type
    */
   RequestType getRequestType() const;

   RequestKind getRequestKind() const;

   // member variables
private:
   const String facebookApi_; // facebook API name
   const RequestParams apiParams_; // parameters of API function.
   const RequestType requestType_; 
   const RequestKind requestKind_; 
};

} // !namespace facebook

#endif