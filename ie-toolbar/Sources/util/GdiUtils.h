/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/

#ifndef GDIUTILS_H
#define GDIUTILS_H


#include "GdiDefs.h"
#include "StringUtils.h"


namespace facebook {

  /**
   * Creates Rect region and return pointer on it
   * @param rect (by ref)
   * @return pointer to rect region created
   */
  RgnPtr createRectRegion(const CRect& rect);

  /**
   * Loads bitmap from resources 
   * @param resourceId - id of bitmap resource (by value)
   * @return pointer to rectloaded bitmap
   */
  BitmapPtr loadBitmap(const UINT resourceId);

  /**
   * Calculates bitmap size 
   * @param bitmap (by ref)
   * @return size of bitmap
   */
  CSize getBitmapSize(CBitmap& bitmap);

  /**
   * Calculates message length in pixels 
   * @param message message text
   * @param font message font
   * @return size of the text
   */
  SIZE getMessageLength(const String& message, const CFont& font);

  /**
   * Create and set font for device context 
   * @param memDC device context
   * @param fontSize font size
   * @param fontFamily font family
   * @param font created font 
   */
  void setFont(CDC* memDC, int fontSize, LPCTSTR fontFamily, CFont& font);

  /**
   * Calculates bitmap size, template function 
   * @param bitmap (by ref pointer)
   * @return size of bitmap
   */
  template <typename T>
  CSize getBitmapSize(const boost::shared_ptr<T>& bitmap) {
     return getBitmapSize(*bitmap);
  }


  /**
   * Resets clip retion 
   * @param devide context (by ref)
   * @return void
   */
  inline void resetClip(CDC& deviceCntx) {
     deviceCntx.SelectClipRgn(0);
  }

  /**
   * Checks if rect has empty size 
   * @param rect (by ref)
   * @return true, if rect is empty
   */
  inline bool isEmpty(const CRect& rect) {
     return !rect.Width() || !rect.Height();
  }

}


#endif // GDIUTILS_H
