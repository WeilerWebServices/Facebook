/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/ 

#include "StdAfx.h"
#include "SessionUtils.h"

#include "Wininet.h"

#include <boost/algorithm/string.hpp>
#include <boost/algorithm/string/erase.hpp>
#pragma warning(disable : 4180)
#include <boost/bind.hpp>
#include <boost/lexical_cast.hpp>
#include <boost/noncopyable.hpp>

#include "../common/CommonConstants.h"
#include "../common/urlutils.h"

#include "RegistryUtils.h"


namespace facebook {

void saveSession(const String& session) {
  String result;
  HKEY hKey;
  if (RegistryUtils::getWritableRegistryKey(hKey)) {
    RegistryUtils::writeString(hKey, 
      kToolbarSettingsRegistryPath, _T("session"), session);
    RegCloseKey(hKey);
  }
}

void loadSession(String& session) {
  HKEY hKey;
  if (RegistryUtils::getWritableRegistryKey(hKey)) {
    RegistryUtils::readString(hKey, 
      kToolbarSettingsRegistryPath, _T("session"), session);
    RegCloseKey(hKey);
  }
}
const String kFacebookRootTrunc = _T("http://facebook.com/");

void applySession(const String& session) {
  std::vector<String> cookieParts;
  split(cookieParts, session, boost::is_any_of(_T("\t")));
  for (unsigned int index = 0; index < cookieParts.size(); ++index) {
    if (cookieParts[index].empty()) {
      //exit if there will be empty string
      continue;
    }
    InternetSetCookie(kFacebookRootTrunc.c_str(), NULL,
      cookieParts[index].c_str());
  }
}

}// !namespace facebook
