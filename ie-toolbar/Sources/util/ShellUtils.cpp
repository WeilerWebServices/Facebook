/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/ 


#include "StdAfx.h"

#include <Tlhelp32.h>
#include <shlobj.h>
#include <boost/algorithm/string/case_conv.hpp>

#include "ShellUtils.h"
#include "StringUtils.h"

namespace facebook{

String getApplicationDataDir() {
  String result;
  Char sResult[MAX_PATH];
  HRESULT hr = ::SHGetFolderPath(NULL,
    CSIDL_COMMON_APPDATA | CSIDL_FLAG_CREATE, NULL, 0, sResult);
  if (SUCCEEDED(hr)) {
    result = sResult;
    result += _T("\\Facebook\\IE Toolbar\\");
  }
  return result;
}

std::vector<String> getFileList(const String& folder, const String& mask) {
  UNREFERENCED_PARAMETER(folder);
  std::vector<String> result;

  WIN32_FIND_DATA fileData;
  HANDLE searchHandle;
  // Start search for language files:
  searchHandle = FindFirstFile(mask.c_str(), &fileData);
  if (searchHandle != INVALID_HANDLE_VALUE) {
    // parse the language name
    do {
      result.push_back(fileData.cFileName);
    } while (FindNextFile(searchHandle, &fileData) != 0);
    FindClose(searchHandle);
  }
  return result;
}

bool execute(String executeFile, String parameters) {
  bool result = true;
  HINSTANCE instance = ShellExecute(NULL, NULL, executeFile.c_str(), 
    parameters.c_str(), NULL, SW_SHOW);

  if (reinterpret_cast<int>(instance) <= SE_ERR_DLLNOTFOUND) {
    result = false;
  }
  return result;
}

bool terminateAllProcesses(const String& processName) {	
  bool result = true;
  HANDLE snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);

  PROCESSENTRY32 processEntry;	
  processEntry.dwSize = sizeof(PROCESSENTRY32);
  int processFound = Process32First(snapshot, &processEntry);

  while (processFound) {
    if (boost::to_lower_copy(String(processEntry.szExeFile)) == 
        boost::to_lower_copy(processName)) {
      HANDLE processHandle = OpenProcess(PROCESS_TERMINATE,
        FALSE, processEntry.th32ProcessID);

      if (!TerminateProcess(processHandle, 0)) {
        result = false;
        break;
      }
    }

    processFound = Process32Next(snapshot, &processEntry);	
  }

  CloseHandle(snapshot);
  return result;
}

bool isBiDi(int localeId) {
  bool result = false;
  LOCALESIGNATURE ls;

  if(GetLocaleInfoW(localeId, LOCALE_FONTSIGNATURE, (LPWSTR)&ls, 
    sizeof(ls) / sizeof(WCHAR)) > 0 && ((ls.lsUsb[3] & 0x8000000) != 0)) {
    result = true;
  }

  return result;
}

} // !namespace facebook