/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/ 

#include "stdafx.h"
#include "CheckUpdatesDlg.h"
#include "FBClientServiceUI.h"

#include "../common/ResourceMessages.h"
#include "../data/ToolbarSettings.h"
#include "../util/GdiUtils.h"
#include "../util/ShellUtils.h"
#include "../util/WndUtils.h"

namespace facebook {

// ---------------------------------------------------------------------
// class CheckUpdatesDlg
// ---------------------------------------------------------------------

IMPLEMENT_DYNAMIC(CheckUpdatesDlg, CDialog)

CheckUpdatesDlg::CheckUpdatesDlg(CWnd* pParent /*=NULL*/)
: CDialog(CheckUpdatesDlg::IDD, pParent) {

}

CheckUpdatesDlg::~CheckUpdatesDlg() {
}

void CheckUpdatesDlg::DoDataExchange(CDataExchange* pDX) {
	CDialog::DoDataExchange(pDX);
}

BOOL CheckUpdatesDlg::OnInitDialog() {
  updateView();
  // make the line correct
  CRect rect;
  GetDlgItem(IDC_LINE)->GetClientRect(&rect);
  GetDlgItem(IDC_LINE)->SetWindowPos(NULL, 0, 0, rect.Width(), 2,
    SWP_NOZORDER | SWP_NOMOVE);
  return CDialog::OnInitDialog();
}

void  CheckUpdatesDlg::OnOK() {
  // if checkbox is checked then disable check for updates
  if (IsDlgButtonChecked(IDC_DISABLE) == BST_CHECKED) {
    ToolbarSettings::getInstance().writeValue(TO_CHECKUPDATES, FALSE);
  }
  EndDialog(TRUE);
}

void  CheckUpdatesDlg::OnCancel() {
  // if checkbox is checked then disable check for updates
  if (IsDlgButtonChecked(IDC_DISABLE) == BST_CHECKED) {
    ToolbarSettings::getInstance().writeValue(TO_CHECKUPDATES, FALSE);
  }
  EndDialog(FALSE);
}

void CheckUpdatesDlg::updateView(int changeId) {
  UNREFERENCED_PARAMETER(changeId);
  // Invert current dialog if current toolbar language is right aligned
  if (ResourceMessages::isTextRightAligned()) {
    invertDialog();
  }

  SetWindowText(ResourceMessages::getMessage(kFacebookToolbar).c_str());

  SetDlgItemText(IDC_LABEL, 
    ResourceMessages::getMessage(kNotifierNewVersion).c_str());
  SetDlgItemText(IDC_DISABLE, 
    ResourceMessages::getMessage(kNotifierDoNotAskMeAgain).c_str());
  SetDlgItemText(IDC_LABEL_YES, 
    ResourceMessages::getMessage(kNotifierYesDescription).c_str());
  SetDlgItemText(IDC_LABEL_NO, 
    ResourceMessages::getMessage(kNotifierNoDescription).c_str());

  SetDlgItemText(IDOK, 
    ResourceMessages::getMessage(kButtonYes).c_str());
  SetDlgItemText(IDCANCEL, 
    ResourceMessages::getMessage(kButtonNo).c_str());
}

void CheckUpdatesDlg::invertDialog() {
  // Move bitmap
  CRect rectImg, rectLabel;
  GetDlgItem(IDC_STATIC)->GetWindowRect(&rectImg);
  GetDlgItem(IDC_LABEL)->GetWindowRect(&rectLabel);
  ScreenToClient(&rectImg);
  ScreenToClient(&rectLabel);
  GetDlgItem(IDC_STATIC)->SetWindowPos(NULL, rectLabel.right - rectImg.Width(),
    rectImg.top, 0, 0, SWP_NOZORDER | SWP_NOSIZE);
  GetDlgItem(IDC_LABEL)->SetWindowPos(NULL, rectImg.left, rectLabel.top, 0, 0,
    SWP_NOZORDER | SWP_NOSIZE);

  // Move buttons
  alignDialogButtons(this);

  // Set right align
  addExStyle(GetSafeHwnd(), WS_EX_LAYOUTRTL);
  addExStyle(GetDlgItem(IDC_LABEL)->GetSafeHwnd(), WS_EX_LAYOUTRTL);
  addExStyle(GetDlgItem(IDC_LABEL_YES)->GetSafeHwnd(), WS_EX_LAYOUTRTL);
  addExStyle(GetDlgItem(IDC_LABEL_NO)->GetSafeHwnd(), WS_EX_LAYOUTRTL, true);
}


BEGIN_MESSAGE_MAP(CheckUpdatesDlg, CDialog)
END_MESSAGE_MAP()

} // !namespace facebook

// CheckUpdatesDlg message handlers
