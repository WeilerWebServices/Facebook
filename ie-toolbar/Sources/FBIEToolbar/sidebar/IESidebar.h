/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/ 

#ifndef IESIDEBAR_H
#define IESIDEBAR_H


#include "SidebarWindow.h"

#include "../system/ClientServiceObserver.h"

#include "../../common/ViewObserver.h"
#include "../../util/StringUtils.h"


namespace facebook {

// forward declarations
class FriendsListDlg;
class SidebarHtmlView;

/**
 * class IESidebar
 *
 * Implementation of sidebar band object. This class is 
 * NOT doing any ui job. This is an mediator between intenet
 * explorer and SidebarWindow, which is responsible for UI 
 * 
 * You should be familiar with: 
 * http://msdn.microsoft.com/en-us/library/cc144099(VS.85).aspx
 *
 */
class IESidebar:
      public IDeskBand, 
      public IInputObject, 
      public IObjectWithSite,
      public IPersistStream,
      public IContextMenu, 
      public ViewObserver,
      private boost::noncopyable {

public:
   IESidebar();
   virtual ~IESidebar();

public:

  /**
   * Returns pointer to 'main' browser
   */
  IWebBrowser2Ptr getParentBrowser() const;

  /**
   * Returns handle of sidebar window
   */
  HWND IESidebar::getSidebarWindow() const;

  /** 
   * Redirects message to sidebar window
   */
  void postMessage(DWORD code, WPARAM wParam, LPARAM lParam);

  virtual void updateView(int changeId = 0);

private:

  // {@ IUnknown implementation 
  STDMETHOD (QueryInterface)(REFIID, LPVOID*);
  STDMETHOD_ (DWORD, AddRef)();
  STDMETHOD_ (DWORD, Release)();
  // @}

  // {@ IOleWindow implementations
  STDMETHOD (GetWindow)(HWND*);
  STDMETHOD (ContextSensitiveHelp)(BOOL);
  // @}

  // {@ IDockingWindow implementation
  STDMETHOD (ShowDW)(BOOL fShow);
  STDMETHOD (CloseDW)(DWORD reserved);
  STDMETHOD (ResizeBorderDW)(LPCRECT, IUnknown*, BOOL);
  // @}

  // {@ IDeskBand implementation
  STDMETHOD (GetBandInfo)(DWORD, DWORD, DESKBANDINFO*);
  // @}

  // {@ IInputObject implementations
  STDMETHOD (UIActivateIO)(BOOL, LPMSG);
  STDMETHOD (HasFocusIO)(void);
  STDMETHOD (TranslateAcceleratorIO)(LPMSG);
  // @}

  // {@ IObjectWithSite implementation
  STDMETHOD (SetSite)(IUnknown* site);
  STDMETHOD (GetSite)(REFIID, LPVOID*);
  // @}

  // {@ IPersistStream implementation
  STDMETHOD (GetClassID)(LPCLSID);
  STDMETHOD (IsDirty)(void);
  STDMETHOD (Load)(LPSTREAM);
  STDMETHOD (Save)(LPSTREAM, BOOL);
  STDMETHOD (GetSizeMax)(ULARGE_INTEGER*);
  // @}

  // {@ IContextMenu implementation
  STDMETHOD (QueryContextMenu)(HMENU, UINT, UINT, UINT, UINT);
  STDMETHOD (InvokeCommand)(CMINVOKECOMMANDINFO*);
  STDMETHOD (GetCommandString)(UINT_PTR, UINT, UINT*, LPSTR, UINT);
  // @}

  // Methods
private:

  /**
   * Helper method. Does the bunch of actions need to be done
   * when explorer ask object to dock object to site
   * 
   * @sitePtr  - pointer to site object
   */
  void dockToSite(IUnknown* sitePtr);

  /**
   * Helper method. Does all the work to initialize and 
   * create sidebar window (those which displays the list of friends)
   */
  void createSidebarWindow();

  /**
   * Used to do the initial update
   * of sidebar window. If session is available -
   * friends list will be loaded as a result of invocation
   * of this method
   */
  void initialUpdateSidebarWindow();

  /**
   * Helper method. Doest the bunch of actions need to be done
   * when explorer ask object to undock from site
   * 
   */
  void undockFromSite();

  /**
   * Safely release IInputObjectSite instance
   * kept as a member variable
   */
  void releaseSite();

  /**
   * Detaches parent window
   */
  void releaseParentWindow();

  /**
   * Encapsulates actions need to be done
   * do free instance of SidebawWindow
   */
  void destroySidebarWindow();

private:
  static const SIZE kMinSidebarSize; /// min band object size
  static const SIZE kMaxSidebarSize; /// max band object size

private:

  DWORD objRefsCount_; /// standard reference count support
  IInputObjectSite* site_; /// pointer to IObjectWithSite   
  IWebBrowser2Ptr browser_; /// pointer to 'main' browser
  CWnd parentWindow_; /// parent window. owner of a band object
  DWORD bandId_;

  SidebarWindow sidebarWindow_; /** responsible for displaying
                                list of friends, 'Settings' button and 'Sort' dropdown */
}; 

}// !namespace facebook

#endif // IESIDEBAR_H
