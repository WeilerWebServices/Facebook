/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/

#ifndef TOOLBARHEDIT_H
#define TOOLBARHEDIT_H

#include <boost/noncopyable.hpp>
#include <utility>

#include "../../common/ViewObserver.h"

#include "../../util/GdiUtils.h"
#include "../../util/StringUtils.h"




namespace facebook{

// edit text positioning constants ...
const int kLeftTextOffset = 4;
const int kTopTextOffset = 4;

/**
 *
 * class ToolbarEdit
 *
 * This class implements windows edit control
 * with custom draw capabilities
 * 
 */
class ToolbarEdit : public CEdit,
  public ViewObserver,
  private boost::noncopyable {

// Types

public:


  typedef std::pair<DWORD, DWORD> Margins;

private:

  typedef ToolbarEdit ClassType;
  typedef CEdit BaseType;

// MFC declarations

private:

  DECLARE_DYNAMIC(ToolbarEdit)

  DECLARE_MESSAGE_MAP()

// Construction

public:

  ToolbarEdit();

// Destruction

public:

  ~ToolbarEdit();

// Accessors

public:

  String getEnteredText() const;

  void setText(const String& text);

  void setPromptText(const String& text);

  String getPromptText() const;

  void setPromptColor(const COLORREF color);

  void setPromptFont(const FontPtr font);
 
  void setDefaultText(const String& text);

  Margins getMargins() const;

  /**
   * Checks whether there is a text entered
   * @return true if there is some text
   */
  bool noTextEntered() const;

  virtual void updateView(int changeId = 0) {UNREFERENCED_PARAMETER(changeId);};

  /**
   * Removes focus from the current window
   *
   */
  void KillFocus();

// Window message handlers

protected:

  afx_msg int OnCreate(LPCREATESTRUCT createStructure);

  afx_msg void OnSetFocus(CWnd* oldWindow);

  afx_msg void OnKillFocus(CWnd* newWindow);

  afx_msg void OnKeyDown(UINT character, UINT repeatCount, UINT flags);

  afx_msg void OnNcCalcSize(BOOL bCalcValidRects, NCCALCSIZE_PARAMS FAR* lpncsp);

  afx_msg void OnNcPaint();

  afx_msg HBRUSH CtlColor(CDC* pDC, UINT nCtlColor);

// Overrides

protected:

  BOOL ToolbarEdit::PreCreateWindow(CREATESTRUCT& createStruct);

// Methods

public:

  /**
   * Sets the icon to show in edit prior to text
   *
   * @param icon to set
   */
  void setSymbolBitmap(const BitmapPtr bitmap);

private:

  /**
   * Get the size of the displayed icon
   *
   * @return icon size
   */
  CSize getSymbolSize() const;

protected:

  /**
   * Send the notification to parent
   *
   * @param  code - code of the message to send
   */
  void notifyParent(const UINT code) const;

  /**
   * Display default prompt text in the edit 
   * 
   */
  void enterDefaultText();

  /**
   * Clear the default prompt text in edit
   * 
   */
  void removeTextIfDefault();

  /**
   * Scroll the cursol position to the end of the control
   * 
   */
  void scrollToCurLineEnd();

  /**
   * Checks whether it should change the edit text to default prompt
   * @return true if should
   */
  bool shouldDrawPrompt() const;

// Members

protected:

  String promptText_;
  FontPtr promptFont_;
  COLORREF promptColor_;
  String defaultText_;
  CBrush backBrush_;
  BitmapPtr symbolBitmap_;
};


} //!namespace facebook


#endif // TOOLBARHEDIT_H
