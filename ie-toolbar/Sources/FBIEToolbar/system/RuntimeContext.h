/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/ 

#ifndef RRUNTIMESETTING_H
#define RUNTIMESETTING_H

#include "../sidebar/IESidebar.h"
#include "../toolbar/IEToolbar.h"


namespace facebook{

class IESidebar;


/**
 * namespace RuntimeContext
 *
 * There are several cases when sidebar 
 * and toolbar should communicate via messaging
 * Thats why they need to know about the handles of 
 * each other. Another thing we should take care here
 * is threading. When you press crtl+n or create new
 * tabe (in IE7 ) explorer place new instatnces of
 * sidebar and toolbar in the same process, but
 * ouf cource - to different threads
 */
namespace RuntimeContext {
  /**
   * @return previously stored  sidebar windows handle. null - otherwise
   */
   HWND getSidebarHwnd();
   
  /**
   * @return previously stored toolbar windows handle. null - otherwise
   */
   HWND getToolbarHwnd();

   /**
   * @return check if toolbar opened or not
   */
   bool isSidebarOpened();
   
  /** 
   * Used to store reference to sidebar object
   * @param  ieSideBar - reference to sidebar object
   */
   void storeSidebar(IESidebar& ieSideBar);

   /** 
    * Used to store reference to toolbar object
    *
    * @param  ieToolbar - reference to toolbar object
    */
   void storeToolbar(IEToolbar& ieToolbar);

   /**
    * @return pointer previously stored sidebar object. null - otherwise
    *
    * @param threadId - thread identifier
    */
   IESidebar* getSidebar(const DWORD threadId = ::GetCurrentThreadId());

   /**
    * @return pointer previously stored toolbar object. null - otherwise
    *
    * @param threadId - thread identifier
    */
   IEToolbar* getToolbar(const DWORD threadId = ::GetCurrentThreadId());

   /**
    * return pointer to 'main' browser
    * @param threadId - thread identifier
    */
   IWebBrowser2Ptr getBrowser(const DWORD threadId = ::GetCurrentThreadId());

}; //!namespace RuntimeContext


} // !namespace facebook


#endif