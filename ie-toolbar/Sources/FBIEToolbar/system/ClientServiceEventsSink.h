/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/

#ifndef CLIENTSERVICEEVENTSSINK_H
#define CLIENTSERVICEEVENTSSINK_H

#include <set>

#include "../../FBClientService/FBClientService_i.h"
#include "ClientServiceObserver.h"


namespace facebook{
/**
 * class ClientServiceEventsSink
 *
 * COM interface for managing connections with client service executable
 * includes methods that allow managing subscribes for client service data updates.
 */
class ATL_NO_VTABLE ClientServiceEventsSink :
      public CComObjectRootEx<CComSingleThreadModel>,
      public CComCoClass<ClientServiceEventsSink>,
      public IDispEventImpl<0, ClientServiceEventsSink,
      &__uuidof(IFBClientServiceEvents), &LIBID_FBClientServiceLib, 1, 0>{

// Types

public:

   typedef ClientServiceObserver* ClientServiceObserverPtr;
   
private:

   typedef std::set<ClientServiceObserverPtr> ObserversSet;

// ATL declarations

public:

   BEGIN_COM_MAP(ClientServiceEventsSink)
      COM_INTERFACE_ENTRY_IID(__uuidof(IFBClientServiceEvents),
      ClientServiceEventsSink)
   END_COM_MAP()

   BEGIN_SINK_MAP(ClientServiceEventsSink)
      SINK_ENTRY_EX(0, __uuidof(IFBClientServiceEvents), 1, dataUpdated)
   END_SINK_MAP()

// Construction

public:

   ClientServiceEventsSink();

// Destruction

public:

   ~ClientServiceEventsSink();

// Attributes

public:

   size_t getObserversCount() const;

// Methods

public:

  /**
   * Subscibe specified observer for client service data updates
   *
   * @param observer - observer object to subscribe
   */
   void subscribe(ClientServiceObserverPtr observer);
   
   /**
    * Unsubscibe specified observer from client service data updates
    *
    * @param observer - observer object to unsubscribe
    */
   void unsubscribe(ClientServiceObserverPtr observer);
   
// Event handlers

private:

   STDMETHOD(dataUpdated)(ULONG dataId);
   
// Members:

private:

   ObserversSet observers_;

};

}// !namespace facebook


#endif // FBCLIENTSERVICEEVENTSSINK_H
