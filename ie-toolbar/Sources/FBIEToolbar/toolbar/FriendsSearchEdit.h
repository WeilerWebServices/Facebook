/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/

#ifndef FRIENDSSEARCHEDIT_H
#define FRIENDSSEARCHEDIT_H

#include <boost/shared_ptr.hpp>

#include "FriendsSearchPopup.h"

#include "../gui/ToolbarEdit.h"



namespace facebook{


class FriendsSearchPopup;

/**
 * class FriendsSearchEdit
 *
 * Implements friends search edit functionality.
 * It also includes all needed functionality to control friends search popup
 */
class FriendsSearchEdit : public ToolbarEdit{

// Types

private:
   FriendsSearchPopup* friendsSearchPopup_;
   typedef FriendsSearchEdit ClassType;
   typedef ToolbarEdit BaseType;

// MFC declarations

private:

   DECLARE_DYNAMIC(FriendsSearchEdit)

   DECLARE_MESSAGE_MAP()

// Construction

public:

   FriendsSearchEdit(/*IEToolbar&  ieToolbar*/);

// Destruction

public:

   ~FriendsSearchEdit();

   virtual void updateView(int changeId = 0);

// Window messages handlers

protected:

  /** 
   * This handler is called at window creation
   * 
   * @param createStruct a structure  contains information about 
   * the CWnd object being created
   * @see http://msdn.microsoft.com/en-us/library/aa249871(VS.60).aspx
   */
  afx_msg int OnCreate(LPCREATESTRUCT createStructure);

  afx_msg void OnKeyUp(UINT character, UINT repeatCount, UINT flags);

  /**
   * Standard handler of changing size
   * 
   * @param type a type of resizing requested
   * @param newWidth a new width of client area
   * @param newHeigth height of the client area
   * @see http://msdn.microsoft.com/en-us/library/aa249952(VS.60).aspx
   */
  afx_msg void OnSize(UINT type, int cx, int cy);


  afx_msg void OnContextMenu(CWnd* window, CPoint point);

// Methods

   /**
    * On Kill Focus
    *
    * @param   window pointer
    *
    * @return void
    */

   afx_msg void OnKillFocus(CWnd* /*wnd*/);

   /**
    * On Set Focus
    *
    * @param   window pointer
    *
    * @return void
    */

   afx_msg void OnSetFocus(CWnd* /*wnd*/);

   /**
    * onFocusChange - custome handler to handle mouse clicks 
    *
    * @param wParam - x coordinate of the click
    * @param lParam      - y coordinate of the click
    * @return int - not used
    */
   afx_msg LRESULT onFocusChange(WPARAM wParam, LPARAM lParam);

   afx_msg LRESULT onDataChanged(WPARAM wParam, LPARAM lParam);

   /**
    * create popup filter
    * @param mode - filter mode
    * @return void
    */
   void CreatePopupFilter();
private:

   /**
    * Applies the text entered in search edit as froends search filter
    *
    * @param subject - window to apply to (sidebar or popup)
    * @param filterText - searching text
    */
   void applySearchFilter(const HWND subject, const String& filterText);

   /**
    * Moves the search popup to new position according to the search edit positon
    *
    */
   void updateSearchBoxPosition() const;

   /**
    * Returns currewntly opened Friends Search Popup
    *
    * @return pointer to Friends Search Popup
    */
   FriendsSearchPopup  * getFriendsSearchPopup();

   /**
    * clears Friends Search Popup
    *
    */
   void freeFriendsSearchPopup();

   /**
    * shows Friends Search Popup
    *
    */
   void showFriendsSearchPopup();

   /**
    * Check whether there is some text in search edit
    *
    * @return true if yes
    */
   BOOL isEditEmpty() const;

   /**
    * Check whether there is only one symbol in search edit
    *
    * @return true if yes
    */
   BOOL isOneSymbol() const;

   /**
    * Mouse hook procedure
    */
   static LRESULT CALLBACK MouseProc( int nCode, WPARAM wParam, LPARAM lParam);

private:

  HHOOK mouseHook_;
  bool disablePopup_;  // disable popup showing for the time of focus change
  bool manualyDisabled_; // check if it were we who closed popup by esc key or not
  bool focusMoved_; // we\ve pressed up or down so focus is in the sidebar or popup
};


} // !namespace facebook


#endif // FRIENDSSEARCHEDIT_H
