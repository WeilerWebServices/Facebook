/**
* Facebook Internet Explorer Toolbar Software License 
* Copyright (c) 2009 Facebook, Inc. 
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (which, together with any graphical images included with such
* software, are collectively referred to below as the "Software") to (a) use,
* reproduce, display, distribute, execute, and transmit the Software, (b)
* prepare derivative works of the Software (excluding any graphical images
* included with the Software, which may not be modified or altered), and (c)
* permit third-parties to whom the Software is furnished to do so, all
* subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.  
*
* Facebook, Inc. retains ownership of the Software and all associated
* intellectual property rights.  All rights not expressly granted in this
* license are reserved by Facebook, Inc.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/


#ifndef TOOLBARSETTING_H
#define TOOLBARSETTING_H

#include "../util/StringUtils.h"

namespace facebook{

enum ToolbarOptions{
  TO_UNKNOWN = -1,
  TO_NEWFRIENDREQUEST, 
  TO_NEWMESSAGE,
  TO_NEWPOKE,              
  TO_NEWFRIEND,            
  TO_NEWEVENTINVITE,      
  TO_NEWSHARE,             
  TO_NEWSMONEWROTEWALL,    
  TO_FRIENDUPDATEDUPROFILE,        
  TO_FRIENDUPDATEDSTATUS,         
  TO_FRIENDUPDATEDALBUMS,         
  TO_FRIENDUPDATEDWALL,           
  TO_FRIENDWROTENOTE,           
  TO_NEWPOPUPNOTIFICATION, 
  TO_NEWGROUPINVITE,
  TO_CURRENTCULTURE,
  TO_CHECKUPDATES,
  TO_UPDATEURLPREFIX,
  TO_UPDATESCOUNTER,
  TO_UPDATESTIMEOUT,
};

/**
 * class ToolbarSettings
 *
 * Implement toolbar settings persistence
 * 
 */
class ToolbarSettings{

  // public members
public:

  /**
   * static function that accesses to the instance of <code>ToolbarSettings</code>
   */
  static ToolbarSettings& getInstance() { return instance_; }

  /**
   *
   * reads settings option value
   *
   * @param option - option id to read
   *
   * @param defaultValue - default value for the setting
   * 
   **/

  bool readValue(long option, bool defaultValue);

  /**
   *
   * reads settings option value
   *
   * @param option - option id to read
   *
   * @param defaultValue - default value for the setting
   * 
   **/

  int readIntValue(long option, int defaultValue);

  /**
   *
   * reads settings option value
   *
   * @param option - option id to read
   * 
   **/

  String readStringValue(long option);

  /**
   *
   * writes option value
   *
   * @param option - option id (by value)
   * @param value -  value to write (by value)
   * 
   **/

  void writeValue(long option, bool value);

  /**
   *
   * writes option value
   *
   * @param option - option id (by value)
   * @param value -  value to write (by value)
   * 
   **/

  void writeValue(long option, int value);

  /**
   *
   * writes option value
   *
   * @param option - option id (by value)
   * @param value -  value to write (by value)
   * 
   **/

  void writeValue(long option, String value);

  /**
   *
   * isPopupEnabled - checks whether popup is enabled
   *
   * @return popup state
   * 
   **/

  bool isPopupEnabled();

  //private methods
private:

  // constructor is private as we implement singletone
  ToolbarSettings(); 
  

  /**
   *
   * initializes toolbar settings
   *
   **/

  void init();

  /**
   * Checks where key is inside the map
   *
   * @param key to check
   * @return true if key is correct
   */
  bool checkKey(long key);


  // private members
private:

  static ToolbarSettings instance_;  // singletone implementation
};

} // !namespace facebook

#endif