source ../include/raft_3_node.inc;


# Create connections to server 4 and 5 (these are not in the ring)
let $rpl_server_number= 4;
let $rpl_connection_name= server_4;
source include/rpl_connect.inc;

let $rpl_server_number= 5;
let $rpl_connection_name= server_5;
source include/rpl_connect.inc;

# Connect server 4 and 5 using COM_BINLOG_DUMP_GTID
connection server_4;
RESET MASTER;
RESET SLAVE;
SET @@GLOBAL.ENABLE_RAFT_PLUGIN = 0;
replace_result $SERVER_MYPORT_1 MASTER_PORT;
eval CHANGE MASTER TO MASTER_HOST = '::1', MASTER_PORT = $SERVER_MYPORT_1, MASTER_USER = 'root',  MASTER_CONNECT_RETRY = 1, MASTER_AUTO_POSITION = 1;
START SLAVE;

connection server_5;
RESET MASTER;
RESET SLAVE;
SET @@GLOBAL.ENABLE_RAFT_PLUGIN = 0;
replace_result $SERVER_MYPORT_1 MASTER_PORT;
eval CHANGE MASTER TO MASTER_HOST = '::1', MASTER_PORT = $SERVER_MYPORT_1, MASTER_USER = 'root',  MASTER_CONNECT_RETRY = 1, MASTER_AUTO_POSITION = 1;
START SLAVE;

# Check raft roles, 4 and 5 should be empty
connection server_1;
show status like 'rpl_raft_role';
connection server_2;
show status like 'rpl_raft_role';
connection server_3;
show status like 'rpl_raft_role';
connection server_4;
show status like 'rpl_raft_role';
connection server_5;
show status like 'rpl_raft_role';

# Create a schema and sync it across replicas
connection server_1;
create table t1 (a int primary key) engine = innodb;

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_4;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_5;
source include/sync_slave_sql_with_master.inc;

# Wait before calling before_commit hook on the leader
connection server_1;
set @@global.debug = "+d,before_before_commit";

# Execute a trx on the leader
connection server_1_1;
send insert into t1 values(1);

# Wait till we've reached just before before_commit hook
connection server_1;
set debug_sync = "now wait_for reached";

# Sync both raft nodes
let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;

# Check the contents of the table in all servers, 4 and 5 should not receive the
# insert
connection server_2;
select * from t1;
connection server_3;
select * from t1;
connection server_4;
select * from t1;
connection server_5;
select * from t1;

# Continue calling before_commit on the leader
connection server_1;
set debug_sync = "now signal continue";
set @@global.debug = "-d,before_before_commit";

connection server_1_1;
reap;

# Sync server 4 and 5
let $sync_slave_connection= server_4;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_5;
source include/sync_slave_sql_with_master.inc;

# Now all servers should have the inserted row
connection server_2;
select * from t1;
connection server_3;
select * from t1;
connection server_4;
select * from t1;
connection server_5;
select * from t1;

# Cleanup
connection server_1;
drop table t1;

let $sync_slave_connection= server_2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_3;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_4;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server_5;
source include/sync_slave_sql_with_master.inc;

connection server_4;
stop slave;
reset slave all;
connection server_5;
stop slave;
reset slave all;

source include/rpl_end.inc;
